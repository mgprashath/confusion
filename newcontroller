using System;
using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;
using LP.QTO.Net.Models;

namespace LP.QTO.Net.Controllers
{
    public class ReportsController : Controller
    {
        [HttpPost]
        public ActionResult GenerateSQL(QueryRequestViewModel model)
        {
            if (model == null || model.SelectedTables == null || model.SelectedColumns == null)
            {
                TempData["SQLQuery"] = "Please select at least one table and one column.";
                return RedirectToAction("Index");
            }

            // Define Table Joins
            Dictionary<string, string> tableJoins = new Dictionary<string, string>
            {
                { "Quote-QuoteStatus", "INNER JOIN QuoteStatus QS ON Q.QuoteStatusID = QS.QuoteStatusID" },
                { "Quote-Client", "INNER JOIN Client C ON Q.ClientID = C.ClientID" },
                { "Quote-VehicleKeeper", "INNER JOIN VehicleKeeper Vk ON Q.VehicleKeeperID = Vk.VehicleKeeperID" },
                { "Quote-ContactDetail", "INNER JOIN ContactDetail Cd ON Vk.ContactDetailID = Cd.ContactDetailID" },
                { "Quote-TaxRate", "INNER JOIN TaxRate T ON Q.TaxRateID = T.TaxRateID" }
            };

            // Construct SQL Query
            string sqlQuery = "SELECT " + string.Join(", ", model.SelectedColumns) + " FROM Quote Q";

            foreach (var table in model.SelectedTables.Where(t => t != "Quote"))
            {
                if (tableJoins.ContainsKey($"Quote-{table}"))
                {
                    sqlQuery += "\n" + tableJoins[$"Quote-{table}"];
                }
            }

            // Add WHERE conditions
            string formattedStartTime = model.StartTime.HasValue ? $"'{model.StartTime.Value:yyyy-MM-dd HH:mm:ss}'" : "'2024-11-01 00:00:00'";
            string formattedEndTime = model.EndTime.HasValue ? $"'{model.EndTime.Value:yyyy-MM-dd HH:mm:ss}'" : "'2024-12-01 00:00:00'";

            sqlQuery += $"\nWHERE CONVERT(datetime, Q.CreationDateTime, 105) BETWEEN {formattedStartTime} AND {formattedEndTime}";
            sqlQuery += "\nAND Q.IsQuoteSP = 1";

            TempData["SQLQuery"] = sqlQuery;
            return RedirectToAction("Index");
        }
    }
}